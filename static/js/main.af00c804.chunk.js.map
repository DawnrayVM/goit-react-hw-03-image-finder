{"version":3,"sources":["Components/Searchbar/Searchbar.module.css","services/image-finder-api.js","Components/Searchbar/Searchbar.jsx","Components/Button/Button.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Modal/Modal.jsx","App.js","index.js"],"names":["module","exports","options","query","page","url","perPage","key","axios","get","then","data","hits","SearchBar","state","inputValue","inputHandler","e","setState","target","value","submitForm","preventDefault","props","onSubmit","className","Searchbar","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","name","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","useStyles","createUseStyles","container","display","textAlign","button","padding","borderRadius","backgroundColor","transition","color","border","textDecoration","cursor","fontFamily","fontSize","fontStyle","fontWeight","minWidth","boxShadow","Button","label","onClick","classes","imageGalleryItem","imageGalleryItemImage","width","height","objectFit","transform","ImageGalleryItem","images","getImageIdx","map","id","webformatURL","largeImageURL","tags","src","alt","data-src","imageGallery","maxWidth","gridTemplateColumns","gridGap","margin","top","bottom","left","right","listStyle","ImageGallery","children","length","overlay","position","justifyContent","alignItems","zIndex","modal","maxHeight","overflow","Modal","activeimage","onKeydown","closeModal","code","useEffect","window","addEventListener","removeEventListener","App","searchQuery","activeImage","activeModal","loading","scrollValue","setDefaultState","findImages","pixabayAPI","filteredHits","spinnerToggle","catch","console","log","finally","getMoreImages","prevState","submitHandler","modalToggle","activeImageHandler","dataset","modalCloseHandler","currentTarget","prevProps","list","document","querySelector","scrollHeight","scrollTop","snapshot","scrollTo","behavior","override","css","size","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.af00c804.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1WTPO\",\"SearchForm\":\"Searchbar_SearchForm__350Vb\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1QMXz\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2vNgl\",\"SearchFormInput\":\"Searchbar_SearchFormInput__30xhK\"};","import axios from 'axios';\r\n\r\nconst options = {\r\n    url: 'https://pixabay.com/api/',\r\n    perPage: 12,\r\n    key: '20341451-3d1090cbc297b1fd4b3b8fcd1',\r\n};\r\n\r\nconst fetchImages = (query, page) => {\r\n    const { url, perPage, key } = options;\r\n    return axios\r\n        .get(\r\n            `${url}?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=${perPage}`,\r\n        )\r\n        .then(({ data }) => data.hits);\r\n};\r\n\r\nexport default { fetchImages };\r\n","import { Component } from 'react';\r\nimport {\r\n    Searchbar,\r\n    SearchForm,\r\n    SearchFormButton,\r\n    SearchFormButtonLabel,\r\n    SearchFormInput,\r\n} from './Searchbar.module.css';\r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        inputValue: '',\r\n    };\r\n\r\n    inputHandler = e => {\r\n        this.setState({ inputValue: e.target.value });\r\n    };\r\n\r\n    submitForm = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.inputValue);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <header className={Searchbar}>\r\n                <form className={SearchForm} onSubmit={this.submitForm}>\r\n                    <button type=\"submit\" className={SearchFormButton}>\r\n                        <span className={SearchFormButtonLabel}></span>\r\n                    </button>\r\n                    <input\r\n                        name=\"input\"\r\n                        className={SearchFormInput}\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        onChange={this.inputHandler}\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n    container: {\r\n        display: 'block',\r\n        textAlign: 'center',\r\n    },\r\n    button: {\r\n        padding: '8px 16px',\r\n        borderRadius: 2,\r\n        backgroundColor: '#3f51b5',\r\n        transition: 'all 250ms cubic-bezier(0.4, 0, 0.2, 1)',\r\n        textAlign: 'center',\r\n        display: 'inline-block',\r\n        color: '#fff',\r\n        border: 0,\r\n        textDecoration: 'none',\r\n        cursor: 'pointer',\r\n        fontFamily: 'inherit',\r\n        fontSize: 18,\r\n        fontStyle: 'normal',\r\n        fontWeight: 500,\r\n        minWidth: 180,\r\n\r\n        boxShadow:\r\n            '0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)',\r\n        '&:hover': { backgroundColor: '#303f9f' },\r\n        '&:focus': { backgroundColor: '#303f9f' },\r\n    },\r\n});\r\n\r\nconst Button = ({ label = 'Load more', onClick }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.container}>\r\n            <button type=\"button\" className={classes.button} onClick={onClick}>\r\n                {label}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n    imageGalleryItem: {\r\n        borderRadius: 2,\r\n        boxShadow:\r\n            '0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12)',\r\n    },\r\n\r\n    imageGalleryItemImage: {\r\n        width: '100%',\r\n        height: 260,\r\n        objectFit: 'cover',\r\n        transition: 'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)',\r\n        '&:hover': {\r\n            transform: 'scale(1.03)',\r\n            cursor: 'zoom-in',\r\n        },\r\n    },\r\n});\r\n\r\nconst ImageGalleryItem = ({ images, getImageIdx }) => {\r\n    const classes = useStyles();\r\n    return images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <li className={classes.imageGalleryItem} key={id}>\r\n            <img\r\n                src={webformatURL}\r\n                alt={tags}\r\n                data-src={largeImageURL}\r\n                className={classes.imageGalleryItemImage}\r\n                onClick={getImageIdx}\r\n            />\r\n        </li>\r\n    ));\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import { createUseStyles } from 'react-jss';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nconst useStyles = createUseStyles({\n    imageGallery: {\n        display: 'grid',\n        maxWidth: 'calc(100vw - 48px)',\n        gridTemplateColumns: 'repeat(auto-fill, minmax(320px, 1fr))',\n        gridGap: 15,\n        margin: { top: 0, bottom: 0, left: 'auto', right: 'auto' },\n        padding: 0,\n        listStyle: 'none',\n    },\n});\n\nconst ImageGallery = ({ images, children, getImageIdx }) => {\n    const classes = useStyles();\n    return (\n        images.length > 0 && (\n            <>\n                <ul className={classes.imageGallery}>\n                    <ImageGalleryItem\n                        images={images}\n                        getImageIdx={getImageIdx}\n                    />\n                </ul>\n                {children}\n            </>\n        )\n    );\n};\n\nexport default ImageGallery;\n","import { createUseStyles } from 'react-jss';\nimport { useState, useEffect } from 'react';\n\nconst useStyles = createUseStyles({\n    overlay: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        zIndex: 1200,\n        padding: { top: 50, bottom: 50 },\n    },\n\n    modal: {\n        maxWidth: 1280,\n        maxHeight: 'auto',\n        overflow: 'hidden',\n    },\n});\n\nconst Modal = ({ activeimage, onClick, onKeydown }) => {\n    const classes = useStyles();\n    const closeModal = e => {\n        if (e.code === 'Escape') {\n            onKeydown();\n        }\n    };\n    useEffect(() => {\n        // console.log('modal did mount');\n        window.addEventListener('keydown', closeModal);\n    }, []);\n    useEffect(() => {\n        return () => {\n            // console.log('will unmount');\n            window.removeEventListener('keydown', closeModal);\n        };\n    }, []);\n    return (\n        <div className={classes.overlay} onClick={onClick}>\n            <div className={classes.modal}>\n                <img src={activeimage} alt=\"Photo from Pixabay\" />\n            </div>\n        </div>\n    );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { css } from '@emotion/core';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\nimport pixabayAPI from './services/image-finder-api';\nimport SearchBar from './Components/Searchbar';\nimport Button from './Components/Button';\nimport ImageGallery from './Components/ImageGallery';\nimport Modal from './Components/Modal';\n\nclass App extends Component {\n    state = {\n        images: [],\n        searchQuery: '',\n        page: 1,\n        activeImage: '',\n        activeModal: false,\n        loading: false,\n        scrollValue: 0,\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.images.length < this.state.images.length) {\n            const list = document.querySelector('.App');\n            return list.scrollHeight - list.scrollTop;\n        }\n        return null;\n    }\n\n    componentDidUpdate(prevState, prevProps, snapshot) {\n        if (prevProps.searchQuery !== this.state.searchQuery) {\n            this.findImages();\n        }\n\n        if (snapshot !== null) {\n            window.scrollTo({\n                top: snapshot - 105,\n                behavior: 'smooth',\n            });\n        }\n    }\n\n    setDefaultState = () => {\n        this.setState({\n            images: [],\n            searchQuery: '',\n            page: 1,\n            activeImage: '',\n            activeModal: false,\n            loading: false,\n            scrollValue: 0,\n        });\n    };\n    findImages = () => {\n        this.state.searchQuery &&\n            pixabayAPI\n                .fetchImages(this.state.searchQuery, this.state.page)\n                .then(hits => {\n                    const filteredHits = hits.map(\n                        ({ id, webformatURL, largeImageURL, tags }) => ({\n                            id,\n                            webformatURL,\n                            largeImageURL,\n                            tags,\n                        }),\n                    );\n                    this.setState({\n                        images: [...filteredHits],\n                        page: this.state.page + 1,\n                    });\n                    this.spinnerToggle();\n                })\n                .catch(console.log)\n                .finally(this.spinnerToggle());\n    };\n\n    getMoreImages = () => {\n        const { searchQuery, page } = this.state;\n\n        pixabayAPI\n            .fetchImages(searchQuery, page)\n            .then(hits => {\n                const filteredHits = hits.map(\n                    ({ id, webformatURL, largeImageURL, tags }) => ({\n                        id,\n                        webformatURL,\n                        largeImageURL,\n                        tags,\n                    }),\n                );\n                this.setState(prevState => ({\n                    images: [...prevState.images, ...filteredHits],\n                    page: page + 1,\n                }));\n                this.spinnerToggle();\n            })\n            .catch(console.log)\n            .finally(this.spinnerToggle());\n    };\n\n    submitHandler = inputValue => {\n        if (this.state.searchQuery !== inputValue) {\n            this.setDefaultState();\n            this.setState({ searchQuery: inputValue });\n        }\n    };\n\n    spinnerToggle = () => {\n        this.setState(prevState => {\n            return { loading: !prevState.loading };\n        });\n    };\n\n    modalToggle = () => {\n        this.setState(prevState => ({ activeModal: !prevState.activeModal }));\n    };\n    activeImageHandler = e => {\n        this.setState({ activeImage: e.target.dataset.src });\n        this.modalToggle();\n    };\n\n    modalCloseHandler = e => {\n        e.target === e.currentTarget && this.modalToggle();\n    };\n\n    render() {\n        const override = css`\n            display: block;\n            margin: 0 auto;\n            border-color: red;\n        `;\n        const {\n            loading,\n            images,\n            activeImage,\n            activeModal,\n            searchQuery,\n        } = this.state;\n        return (\n            <div className=\"App\">\n                <SearchBar onSubmit={this.submitHandler} />\n                {loading && images.length === 0 && (\n                    <PropagateLoader\n                        css={override}\n                        size={20}\n                        color={'#3f51b5'}\n                    />\n                )}\n                <ImageGallery\n                    images={images}\n                    getImageIdx={this.activeImageHandler}\n                >\n                    {loading ? (\n                        <PropagateLoader\n                            css={override}\n                            size={20}\n                            color={'#3f51b5'}\n                        />\n                    ) : (\n                        <Button onClick={this.getMoreImages} />\n                    )}\n                </ImageGallery>\n\n                {activeModal && (\n                    <Modal\n                        activeimage={activeImage}\n                        onClick={this.modalCloseHandler}\n                        onKeydown={this.modalToggle}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize';\r\nimport './styles/common.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}